// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyBlog.Server.EntityFramework.Core.DbContexts;

#nullable disable

namespace MyBlog.Server.Database.Migrations.Migrations
{
    [DbContext(typeof(DefaultDbContext))]
    [Migration("20231227075853_v1.1.1")]
    partial class v111
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MyBlog.Server.Core.Entities.AuthUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("编码");

                    b.Property<bool?>("is_lock")
                        .HasColumnType("bit")
                        .HasComment("锁定");

                    b.Property<string>("is_lock_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("锁定");

                    b.Property<DateTime?>("last_login_time")
                        .HasColumnType("datetime2")
                        .HasComment("上次登录时间");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("密码");

                    b.Property<string>("roleid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("角色权限id");

                    b.Property<string>("roleid_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("角色权限名");

                    b.Property<int?>("try_times")
                        .HasColumnType("int")
                        .HasComment("尝试登录次数");

                    b.Property<string>("user_infoid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("用户id");

                    b.HasKey("Id");

                    b.ToTable("AuthUser");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.Gallery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("image_url")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("大图");

                    b.Property<string>("imageid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("大图id");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("preview_url")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("预览图");

                    b.Property<string>("previewid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("预览图片id");

                    b.Property<string>("tags")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("标签");

                    b.HasKey("Id");

                    b.ToTable("Gallery");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.JobHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("end_time")
                        .HasColumnType("datetime2")
                        .HasComment("结束时间");

                    b.Property<string>("error_msg")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("错误原因");

                    b.Property<string>("job_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("作业名");

                    b.Property<DateTime?>("start_time")
                        .HasColumnType("datetime2")
                        .HasComment("开始时间");

                    b.Property<string>("status")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("状态");

                    b.HasKey("Id");

                    b.ToTable("JobHistory");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.MailVertification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息内容");

                    b.Property<DateTime?>("expire_time")
                        .HasColumnType("datetime2")
                        .HasComment("过期时间");

                    b.Property<bool?>("is_active")
                        .HasColumnType("bit")
                        .HasComment("是否激活");

                    b.Property<string>("login_request")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("登录请求信息");

                    b.Property<string>("mail_address")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("邮箱地址");

                    b.Property<string>("mail_type")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("激活类型");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.HasKey("Id");

                    b.ToTable("MailVertification");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.MessageRemind", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息内容");

                    b.Property<bool?>("is_read")
                        .HasColumnType("bit")
                        .HasComment("是否阅读");

                    b.Property<string>("is_read_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("是否阅读");

                    b.Property<string>("message_type")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息类型");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("receiverId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("接收人id");

                    b.Property<string>("receiverId_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("接收人名称");

                    b.HasKey("Id");

                    b.ToTable("MessageRemind");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.Robot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("说明");

                    b.Property<string>("hook")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("钩子地址");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("robot_type")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("类型");

                    b.Property<string>("robot_type_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("类型名称");

                    b.HasKey("Id");

                    b.ToTable("Robot");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.RobotMessageTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("content")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息内容");

                    b.Property<string>("job_state")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("任务状态");

                    b.Property<string>("job_state_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("任务状态名称");

                    b.Property<string>("message_type")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息类型");

                    b.Property<string>("message_type_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("消息类型名称");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("robotid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("机器人");

                    b.Property<string>("robotid_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("机器人名称");

                    b.Property<string>("runtime")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("执行时间");

                    b.HasKey("Id");

                    b.ToTable("RobotMessageTask");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.SysConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("编码");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("value")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("值");

                    b.HasKey("Id");

                    b.ToTable("SysConfig");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.SysEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("编码");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.HasKey("Id");

                    b.ToTable("SysEntity");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.SysParam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("编码");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("sys_paramGroupId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("选项集");

                    b.Property<string>("sys_paramgroupid_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("选项集名");

                    b.HasKey("Id");

                    b.ToTable("SysParam");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.SysParamGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("编码");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.HasKey("Id");

                    b.ToTable("SysParamGroup");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.SysRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("描述");

                    b.Property<bool?>("is_basic")
                        .HasColumnType("bit")
                        .HasComment("是否基础角色");

                    b.Property<string>("is_basic_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("是否基础角色");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("parent_roleid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("继承角色");

                    b.Property<string>("parent_roleid_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("继承角色");

                    b.HasKey("Id");

                    b.ToTable("SysRole");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.SysRolePrivilege", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("object_type")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("对象类型");

                    b.Property<string>("objectid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("对象id");

                    b.Property<string>("objectid_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("对象名");

                    b.Property<int?>("privilege")
                        .HasColumnType("int")
                        .HasComment("权限值");

                    b.Property<string>("sys_roleid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("角色id");

                    b.Property<string>("sys_roleid_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("角色名");

                    b.HasKey("Id");

                    b.ToTable("SysRolePrivilege");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTimeOffset>("CreatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTimeOffset?>("UpdatedTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("avatar")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("头像");

                    b.Property<string>("cellphone")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("手机号码");

                    b.Property<string>("code")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("编码");

                    b.Property<int?>("gender")
                        .HasColumnType("int")
                        .HasComment("性别");

                    b.Property<string>("gender_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("性别");

                    b.Property<string>("gitee_id")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Gitee ID");

                    b.Property<string>("github_id")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("Github ID");

                    b.Property<string>("introduction")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("个人介绍");

                    b.Property<string>("is_lock_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("life_photo")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("生活照");

                    b.Property<string>("mailbox")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("邮箱");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("realname")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("真实姓名");

                    b.Property<string>("roleid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("角色权限id");

                    b.Property<string>("roleid_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("角色权限名");

                    b.Property<bool?>("statecode")
                        .HasColumnType("bit")
                        .HasComment("启用");

                    b.Property<string>("statecode_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("启用");

                    b.HasKey("Id");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("MyBlog.Server.Core.Entities.VersionScriptExecutionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool?>("is_success")
                        .HasColumnType("bit")
                        .HasComment("是否执行成功");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.HasKey("Id");

                    b.ToTable("VersionScriptExecutionLog");
                });

            modelBuilder.Entity("Sixpence.Web.Entity.SysFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DownloadUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("content_type")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("内容类型");

                    b.Property<string>("file_path")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("文件路径");

                    b.Property<string>("file_type")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("文件类型");

                    b.Property<string>("hash_code")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("哈希值");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("objectId")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("文件对象");

                    b.Property<string>("real_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("真实文件名");

                    b.HasKey("Id");

                    b.ToTable("SysFile");
                });

            modelBuilder.Entity("Sixpence.Web.Module.SysMenu.SysMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("SysMenuId")
                        .HasColumnType("int");

                    b.Property<string>("icon")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("图标");

                    b.Property<int?>("menu_index")
                        .HasColumnType("int")
                        .HasComment("菜单索引");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("名称");

                    b.Property<string>("parentid")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("上级菜单");

                    b.Property<string>("parentid_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("上级菜单");

                    b.Property<string>("router")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("路由地址");

                    b.Property<bool?>("statecode")
                        .HasColumnType("bit")
                        .HasComment("状态");

                    b.Property<string>("statecode_name")
                        .HasColumnType("nvarchar(max)")
                        .HasComment("状态名称");

                    b.HasKey("Id");

                    b.HasIndex("SysMenuId");

                    b.ToTable("SysMenu");
                });

            modelBuilder.Entity("Sixpence.Web.Module.SysMenu.SysMenu", b =>
                {
                    b.HasOne("Sixpence.Web.Module.SysMenu.SysMenu", null)
                        .WithMany("children")
                        .HasForeignKey("SysMenuId");
                });

            modelBuilder.Entity("Sixpence.Web.Module.SysMenu.SysMenu", b =>
                {
                    b.Navigation("children");
                });
#pragma warning restore 612, 618
        }
    }
}
